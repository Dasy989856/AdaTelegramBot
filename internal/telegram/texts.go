package telegram

import (
	"AdaTelegramBot/internal/models"
	"fmt"
)

func createStaticsBriefText(d *models.DataForStatistics) string {
	return fmt.Sprintf(`
	<b>      üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>
<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥–∞–Ω–Ω—ã—Ö —Ä–µ–∫–ª–∞–º:</b> %d
<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö —Ä–µ–∫–ª–∞–º:</b> %d
<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∑–∞–∏–º–Ω—ã—Ö –ø–∏–∞—Ä–æ–≤:</b> %d
<b>–ü—Ä–∏–±—ã–ª—å:</b> %d —Ä—É–±–ª–µ–π
<b>–¢—Ä–∞—Ç—ã:</b> %d —Ä—É–±–ª–µ–π
<b>–ß–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å:</b> %d —Ä—É–±–ª–µ–π
`, d.CountAdEventSale, d.CountAdEventBuy, d.CountAdEventMutaul, d.Profit, d.Losses, d.Profit-d.Losses)
}

// –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç-–æ–ø–∏—Å–∞–Ω–∏—è ad —Å–æ–±—ã—Ç–∏—è.
func createAdEventDescriptionText(a *models.AdEvent) (descriptionAdEvent string) {
	switch a.Type {
	case models.TypeSale:
		descriptionAdEvent = fmt.Sprintf(`
		- <b>–ü–æ–∫—É–ø–∞—Ç–µ–ª—å:</b> %s
		- <b>–ö–∞–Ω–∞–ª –ø–æ–∫—É–ø–∞—Ç–µ–ª—è:</b> %s
		- <b>–¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏:</b> %d
		- <b>–î–∞—Ç–∞ –ø–æ—Å—Ç–∏–Ω–≥–∞ —Ä–µ–∫–ª–∞–º—ã:</b> %s
		- <b>–î–∞—Ç–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ä–µ–∫–ª–∞–º—ã:</b> %s
		`, a.Partner, a.Channel, a.Price, a.DatePosting, a.DateDelete)
	case models.TypeBuy:
		descriptionAdEvent = fmt.Sprintf(`
		- <b>–ü—Ä–æ–¥–∞–≤–µ—Ü:</b> %s
		- <b>–ö–∞–Ω–∞–ª –ø—Ä–æ–¥–∞–≤—Ü–∞:</b> %s
		- <b>–¶–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏:</b> %d
		- <b>–î–∞—Ç–∞ –ø–æ—Å—Ç–∏–Ω–≥–∞ —Ä–µ–∫–ª–∞–º—ã:</b> %s
		- <b>–î–∞—Ç–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ä–µ–∫–ª–∞–º—ã:</b> %s
		`, a.Partner, a.Channel, a.Price, a.DatePosting, a.DateDelete)
	case models.TypeMutual:
		descriptionAdEvent = fmt.Sprintf(`
		- <b>–ü–∞—Ä—Ç–Ω–µ—Ä –ø–æ –≤–∑–∞–∏–º–Ω–æ–º—É –ø–∏–∞—Ä—É:</b> %s
		- <b>–ö–∞–Ω–∞–ª –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –ø–æ –≤–∑–∞–∏–º–Ω–æ–º—É –ø–∏–∞—Ä—É:</b> %s
		- <b>–¶–µ–Ω–∞ –≤–∑–∞–∏–º–Ω–æ–≥–æ –ø–∏–∞—Ä–∞:</b> %d
		- <b>–î–∞—Ç–∞ –ø–æ—Å—Ç–∏–Ω–≥–∞ —Ä–µ–∫–ª–∞–º—ã:</b> %s
		- <b>–î–∞—Ç–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ä–µ–∫–ª–∞–º—ã:</b> %s
		`, a.Partner, a.Channel, a.Price, a.DatePosting, a.DateDelete)
	}

	return descriptionAdEvent
}