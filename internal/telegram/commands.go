package telegram

import (
	"fmt"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥.
func (b *BotTelegram) handlerCommand(msg *tgbotapi.Message) error {
	switch msg.Command() {
	case "start":
		if err := b.cmdStart(msg); err != nil {
			return err
		}
		return nil
	default:
		if err := b.handlerMessage(msg); err != nil {
			return err
		}
		// botMsg := tgbotapi.NewMessage(userId, `–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ ü•≤`)
		// if err := b.sendMessage(userId, botMsg); err != nil {
		// 	return fmt.Errorf("error send unknow command error: %w", err)
		// }
		return nil
	}
}

// –ö–æ–º–∞–Ω–¥–∞ /start
func (b *BotTelegram) cmdStart(msg *tgbotapi.Message) error {
	userId := msg.Chat.ID

	// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
	if err := b.db.DefaultUserCreation(msg.Chat.ID, msg.Chat.UserName, msg.Chat.FirstName); err != nil {
		return err
	}

	// –û—Ç–ø—Ä–∞–≤–∫–∞ –º–µ–Ω—é /start.
	if err := b.sendStartMenu(userId); err != nil {
		return err
	}

	// –û—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞.
	if err := b.cleareAllChat(userId); err != nil {
		return err
	}

	return nil
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –º–µ–Ω—é.
func (b *BotTelegram) sendStartMenu(userId int64) error {
	// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —à–∞–≥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
	if err := b.db.SetStepUser(userId, "start"); err != nil {
		return err
	}

	text := "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç–∞ –ê–¥–∞:"
	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è–º–∏.", "ad_event"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–ë–∏—Ä–∂–∞ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π.", "exchange"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.", "statistic"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞.", "help"),
		),
	)

	// –°–æ–∑–¥–∞–Ω–∏–µ/–ø–æ–ª—É—á–µ–Ω–∏–µ startMessage –∫–æ—Ç–æ—Ä–æ–µ –Ω–µ —É–¥–∞–ª—è–µ—Ç—Å—è.
	startMessageId, err := b.db.GetStartMessageId(userId)
	if err != nil {
		if err := updateStartMenu(b, userId, startMessageId, keyboard, text); err != nil {
			return err
		}
		return nil
	}

	// –ò–∑–º–µ–Ω–µ–Ω–∏–µ startMenu.
	if err := editStartMenu(b, userId, startMessageId, keyboard, text); err != nil {
		// –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ —Å—Ç–∞—Ä—Ç –º–µ–Ω—é.
		if err := updateStartMenu(b, userId, startMessageId, keyboard, text); err != nil {
			return err
		}
	}

	return nil
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ startMenu.
func updateStartMenu(b *BotTelegram, userId int64, startMessageId int, keyboard tgbotapi.InlineKeyboardMarkup, text string) error {
	menuMsg := tgbotapi.NewMessage(userId, text)
	menuMsg.ReplyMarkup = keyboard

	// –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ startMessage.
	newStartMessage, err := b.bot.Send(menuMsg)
	if err != nil {
		return fmt.Errorf("error send startMenu: %w", err)
	}

	// –£–¥–∞–ª–µ–Ω–∏–µ –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ —Å—Ç–∞—Ä–æ–≥–æ startMessage.
	b.cleareMessage(userId, startMessageId)

	// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ startMessage.
	if err := b.db.UpdateStartMessageId(userId, newStartMessage.MessageID); err != nil {
		return err
	}

	return nil
}

func editStartMenu(b *BotTelegram, userId int64, startMessageId int, keyboard tgbotapi.InlineKeyboardMarkup, text string) error {
	menuMsg := tgbotapi.NewEditMessageTextAndMarkup(userId, startMessageId, text, keyboard)
	if _, err := b.bot.Send(menuMsg); err != nil {
		return fmt.Errorf("error edit startMenu: %w", err)
	}
	return nil
}
